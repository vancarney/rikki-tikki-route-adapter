// Generated by CoffeeScript 1.9.0
var AbstractRouteAdapter,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __hasProp = {}.hasOwnProperty;

AbstractRouteAdapter = (function(_super) {
  __extends(AbstractRouteAdapter, _super);

  AbstractRouteAdapter.prototype.required = [];

  function AbstractRouteAdapter(_at_params) {
    var param, _i, _len, _ref;
    this.params = _at_params != null ? _at_params : {};
    _ref = this.required;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      param = _ref[_i];
      if (!(this.params.hasOwnProperty(param))) {
        throw Error("required param '" + param + "' was not defined in the adapter params object");
      }
    }
  }

  AbstractRouteAdapter.prototype.requestHandler = function(req, res) {
    throw 'AbstractRouteAdapter.requestHandler(req,res) must be implemented by subclass';
  };

  AbstractRouteAdapter.prototype.responseHandler = function(req, res) {
    throw 'AbstractRouteAdapter.responseHandler(req,res) must be implemented by subclass';
  };

  AbstractRouteAdapter.prototype.addRoute = function(route, method, handler) {
    throw 'AbstractRouteAdapter.addRoute(route, method, handler) must be implemented by subclass';
  };

  return AbstractRouteAdapter;

})(Object);

module.exports = AbstractRouteAdapter;
